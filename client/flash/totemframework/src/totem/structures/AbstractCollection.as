//------------------------------------------------------------------------------////     _______ __ __           //    |   _   |  |  |--.-----. //    |___|   |  |  _  |__ --| //     _(__   |__|_____|_____| //    |:  1   |                //    |::.. . |                //    `-------'      //                       //   3lbs Copyright 2013 //   For more information see http://www.3lbs.com //   All rights reserved. ////------------------------------------------------------------------------------//------------------------------------------------------------------------------////     _______ __ __           //    |   _   |  |  |--.-----. //    |___|   |  |  _  |__ --| //     _(__   |__|_____|_____| //    |:  1   |                //    |::.. . |                //    `-------'      //                       //   3lbs Copyright 2013 //   For more information see http://www.3lbs.com //   All rights reserved. ////------------------------------------------------------------------------------package totem.structures{	import flash.utils.getQualifiedClassName;	public class AbstractCollection	{		protected var _size : int;		public function contains( element : * ) : Boolean		{			return false;		}		public function containsAll( collection : ICollection ) : Boolean		{			if ( collection )			{				var i : ITotemIterator = collection.iterator;				while ( i.hasNext )				{					if ( !contains( i.next ))						return false;				}				return true;			}			else			{				return throwNullReferenceException();			}		}		public function get isEmpty() : Boolean		{			return ( _size < 1 );		}		public function get size() : int		{			return _size;		}		public function toString( ... args ) : String		{			var s : String = "";			for each ( var i : String in args )				s += ", " + i;			return "[" + getQualifiedClassName( this ).match( "[^:]*$" )[ 0 ] + s + "]";		}		protected function throwNullReferenceException() : Boolean		{			throw new Error( toString() + " The specified collection is null!" );			return false;		}	}}